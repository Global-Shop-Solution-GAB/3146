Program.Sub.ScreenSU.Start
gui.SS_Form1..create
gui.SS_Form1..caption("BOM Material Reprice")
gui.SS_Form1..size(4260,2355)
gui.SS_Form1..position(0,0)
gui.SS_Form1..event(unload,ss_form1_unload)
gui.SS_Form1..alwaysontop(False)
gui.SS_Form1..fontname("Arial")
gui.SS_Form1..fontsize(8)
gui.SS_Form1..forecolor(0)
gui.SS_Form1..fontstyle(,,,,)
gui.SS_Form1..BackColor(-2147483633)
gui.SS_Form1..controlbox(True)
gui.SS_Form1..maxbutton(False)
gui.SS_Form1..minbutton(False)
gui.SS_Form1..mousepointer(0)
gui.SS_Form1..moveable(True)
gui.SS_Form1..sizeable(False)
gui.SS_Form1..ShowInTaskBar(True)
gui.SS_Form1..titlebar(True)
gui.SS_Form1.lbl_dtpDate.create(label,"Select Month",True,1800,200,1,100,135,True,0,Arial,8,-2147483633,0)
gui.SS_Form1.dtpDate.create(datepicker)
gui.SS_Form1.dtpDate.visible(True)
gui.SS_Form1.dtpDate.size(1800,345)
gui.SS_Form1.dtpDate.zorder(0)
gui.SS_Form1.dtpDate.position(100,335)
gui.SS_Form1.dtpDate.enabled(True)
gui.SS_Form1.dtpDate.checkbox(False)
gui.SS_Form1.lbl_txtFile.create(label,"Select Import Spreadsheet",True,3090,200,1,100,765,True,0,Arial,8,-2147483633,0)
gui.SS_Form1.txtFile.create(textbox,"",True,3570,330,0,100,965,False,0,Arial,8,16777215,1)
gui.SS_Form1.cmd_txtFile.create(button)
gui.SS_Form1.cmd_txtFile.caption("^")
gui.SS_Form1.cmd_txtFile.visible(True)
gui.SS_Form1.cmd_txtFile.size(330,330)
gui.SS_Form1.cmd_txtFile.zorder(0)
gui.SS_Form1.cmd_txtFile.position(3770,965)
gui.SS_Form1.cmd_txtFile.enabled(True)
gui.SS_Form1.cmd_txtFile.fontname("Arial")
gui.SS_Form1.cmd_txtFile.fontsize(8)
gui.SS_Form1.cmd_txtFile.event(click,cmd_txtfile_click)
gui.SS_Form1.cmdOk.create(button)
gui.SS_Form1.cmdOk.caption("Ok")
gui.SS_Form1.cmdOk.visible(True)
gui.SS_Form1.cmdOk.size(1000,360)
gui.SS_Form1.cmdOk.zorder(0)
gui.SS_Form1.cmdOk.position(100,1380)
gui.SS_Form1.cmdOk.enabled(True)
gui.SS_Form1.cmdOk.fontname("Arial")
gui.SS_Form1.cmdOk.fontsize(8)
gui.SS_Form1.cmdOk.event(click,cmdok_click)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.Global.bChk.Declare(Boolean,True)
Variable.UDT.uJDBom.Define("Parent",String)
Variable.uGlobal.uJDBom.Declare("uJDBom")
Variable.UDT.uBomSS.Define("Month",Long)
Variable.UDT.uBomSS.Define("Year",Long)
Variable.UDT.uBomSS.Define("Parent",String)
Variable.UDT.uBomSS.Define("Part",String)
Variable.UDT.uBomSS.Define("Cost",Float)
Variable.uGlobal.uBomSS.Declare("uBomSS")
Variable.UDT.uMatlSS.Define("Part",String,"PART")
Variable.UDT.uMatlSS.Define("Alt_Cost",Float,"AMT_ALT_COST")
Variable.UDT.uMatlSS.Define("Month",Long)
Variable.UDT.uMatlSS.Define("Year",Long)
Variable.uGlobal.uMatlSS.Declare("uMatlSS")
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Coded by: mla
'Project Start Date: 8/24/2011
'Notes:
'  Weisgram

F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
Gui.SS_Form1.dtpDate.CustomFormat("MMM yyy")
Gui.SS_Form1..Show

Program.Sub.Main.End

program.sub.cmd_txtfile_click.start
F.Intrinsic.Control.SetErrorHandler("cmd_txtfile_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sFile.Declare(String)

F.Intrinsic.UI.ShowOpenFileDialog("","xls|*.xls",,Variable.Local.sFile)
F.Intrinsic.Control.If(V.Local.sFile,<>,"***CANCEL***")
	Gui.SS_Form1.txtFile.Text(V.Local.sFile)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_txtfile_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

program.sub.cmd_txtfile_click.end

program.sub.cmdok_click.start
F.Intrinsic.Control.SetErrorHandler("cmdok_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.bChk.Declare(Boolean)

F.Intrinsic.Control.CallSub(Chk)
F.Intrinsic.Control.If(V.Global.bChk,=,True)
	F.Intrinsic.Control.CallSub(Matlss)
	F.Intrinsic.Control.CallSub(Matlssupd)
	F.Intrinsic.Control.CallSub(Loadjdbom)
	F.Intrinsic.Control.If(V.uGlobal.uJDBom.UBound,=,-1)
		F.Intrinsic.Control.CallSub(Bomss)
		F.Intrinsic.Control.CallSub(Bomssupd)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdok_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

program.sub.cmdok_click.end

program.sub.ss_form1_unload.start
F.ODBC.Connection!con.Close
F.Intrinsic.Control.End

program.sub.ss_form1_unload.end

Program.Sub.Chk.Start
F.Intrinsic.Control.SetErrorHandler("Chk_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iSelMonth.Declare(Long)
V.Local.iSelYear.Declare(Long)
V.Local.iCurMonth.Declare(Long)
V.Local.sSql.Declare(String)
V.Local.bExcelChk.Declare(Boolean)

V.Global.bChk.Set(True)
F.Intrinsic.Date.Month(V.Screen.SS_Form1!dtpDate.Value,V.Local.iSelMonth)
F.Intrinsic.Date.Year(V.Screen.SS_Form1!dtpDate.Value,V.Local.iSelYear)
F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iCurMonth)
F.Intrinsic.Control.If(V.Local.iSelMonth,>,V.Local.iCurMonth)
	F.Intrinsic.UI.Msgbox("Selected month greater than current month!","Invalid Month")
	V.Global.bChk.Set(False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Control.If(V.Screen.SS_Form1!txtFile.Text,=,"")
		F.Intrinsic.UI.Msgbox("No import file selected!","Invalid File")
		V.Global.bChk.Set(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat("Select * from ATG_3146_Matl_Snapshot where Month = ",V.Local.iSelMonth," and Year = ",V.Local.iSelYear,V.Local.sSql)
		F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSql)
		F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
			F.Intrinsic.UI.Msgbox("Selected month has already been posted!","Invalid Month")
			V.Global.bChk.Set(False)
			F.ODBC.con!rst.Close
		F.Intrinsic.Control.Else
			F.ODBC.con!rst.Close
			F.Intrinsic.String.Concat("Select * from ATG_3146_BOM_Snapshot where Month = ",V.Local.iSelMonth," and Year = ",V.Local.iSelYear,V.Local.sSql)
			F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSql)
			F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
				F.Intrinsic.UI.Msgbox("Selected month has already been posted!","Invalid Month")
				V.Global.bChk.Set(False)
				F.ODBC.con!rst.Close
			F.Intrinsic.Control.Else
				F.ODBC.con!rst.Close
				F.Automation.MSExcel.CheckPresence(V.Local.bExcelChk)
				F.Intrinsic.Control.If(V.Local.bExcelChk,=,False)
					F.Intrinsic.UI.Msgbox("Excel not installed!","No Excel Installation")
					V.Global.bChk.Set(False)
				F.Intrinsic.Control.Else
					V.Global.bChk.Set(True)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Chk_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.Chk.End

Program.Sub.BomSS.Start
F.Intrinsic.Control.SetErrorHandler("BomSS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.i.Declare(Long)
V.Local.ia.Declare(Long)
V.Local.sFilePath.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sBomFile.Declare(String)
V.Local.sBom.Declare(String)
V.Local.sBomSeq.Declare(String)
V.Local.iMonth.Declare(Long)
V.Local.iYear.Declare(Long)
V.Local.iUB.Declare(Long)
V.Local.sSql.Declare(String)

F.Intrinsic.Date.Month(V.Screen.SS_Form1!dtpDate.Value,V.Local.iMonth)
F.Intrinsic.Date.Year(V.Screen.SS_Form1!dtpDate.Value,V.Local.iYear)
V.uGlobal.uBomSS.Redim(-1,-1)
V.Local.iUB.Set(-1)
F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uJDBom.LBound,V.uGlobal.uJDBom.UBound,1)
	F.Intrinsic.String.Concat(V.System.Temp,"\GSS\BOM",V.Caller.Terminal,".txt",V.Local.sFilePath)
	F.Intrinsic.String.Concat("0",V.Ambient.Tab,V.uGlobal.uJDBom(V.Local.i)!Parent,V.Ambient.Tab,V.Local.sFilePath,V.Local.sFile)
	F.Intrinsic.File.String2File(V.Local.sFilePath,V.Local.sFile)
	F.Global.General.CallWrapperSync(410000,V.Local.sFilePath)
	V.Local.sBomFile.Redim(0,0)
	F.Intrinsic.File.File2String(V.Local.sFilePath,V.Local.sBomFile)
	F.Intrinsic.String.Split(V.Local.sBomFile,V.Ambient.Tab,V.Local.sBomFile)
	V.Local.sBom.Redim(0,0)
	F.Intrinsic.File.File2String(V.Local.sFile(3).Trim,V.Local.sBom)
	F.Intrinsic.String.Split(V.Local.sBom,V.Ambient.NewLine,V.Local.sBom)
	F.Intrinsic.Control.For(V.Local.ia,7,V.Local.sBom.UBound,1)
		F.Intrinsic.String.Split(V.Local.sBOM(V.Local.i),"|~|",V.Local.sBOMSeq)
		F.Intrinsic.Control.If(V.uGlobal.uBomSS.UBound,=,-1)
			V.uGlobal.uBomSS.Redim(0,0)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Math.Add(V.Local.iUB,1,V.Local.iUB)
		V.uGlobal.uBomSS.RedimPreserve(V.uGlobal.uBomSS.LBound,V.Local.iUB)
		V.uGlobal.uBomSS(V.Local.iUB)!Month.Set(V.Local.iMonth)
		V.uGlobal.uBomSS(V.Local.iUB)!Year.Set(V.Local.iYear)
		V.uGlobal.uBomSS(V.Local.iUB)!Parent.Set(V.Local.sBomSeq(12))
		V.uGlobal.uBomSS(V.Local.iUB)!Part.Set(V.Local.sBomSeq(2))
		F.Intrinsic.String.Concat("Select COST from V_BOM_MSTR where PARENT = '",V.Local.sBomSeq(12).Trim,"' and PART = '",V.Local.sBomSeq(2),"'",V.Local.sSql)
		F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSql)
		F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)
			V.uGlobal.uBomSS(V.Local.iUB)!Cost.Set(0)
		F.Intrinsic.Control.Else
			V.uGlobal.uBomSS(V.Local.iUB)!Cost.Set(V.ODBC.con!rst.FieldValFloat!COST)
		F.Intrinsic.Control.EndIf
		F.ODBC.con!rst.Close
	F.Intrinsic.Control.Next(V.Local.ia)
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BomSS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.BomSS.End

Program.Sub.LoadJDBom.Start
F.Intrinsic.Control.SetErrorHandler("LoadJDBom_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)

V.Local.sSql.Set("Select PART from INVENTORY_MST2 where NAME_VENDOR IN ('JOH001','ASV001')")
F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSql)
F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
	F.Intrinsic.Variable.LoadUDTFromRecordset("con","rst",V.uGlobal.uJDBom,False)
	F.ODBC.con!rst.Close
F.Intrinsic.Control.Else
	V.uGlobal.uJDBom.Redim(-1,-1)
	F.ODBC.con!rst.Close
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LoadJDBom_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.LoadJDBom.End

Program.Sub.LoadBomSSRst.Start
F.Intrinsic.Control.SetErrorHandler("LoadBomSSRst_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.If(V.uGlobal.uBomSS.UBound,>,-1)
	F.Intrinsic.Variable.SaveUDTToRecordset("con","rst","Variable.uGlobal.uBOM")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LoadBomSSRst_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.LoadBomSSRst.End

Program.Sub.BomSSUPD.Start
F.Intrinsic.Control.SetErrorHandler("BomSSUPD_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.i.Declare(Long)
V.Local.sParam.Declare(String)

F.Intrinsic.Control.If(V.uGlobal.uJDBom.UBound,=,-1)
	F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uJDBom.LBound,V.uGlobal.uJDBom.UBound,1)
		F.Intrinsic.String.Concat("01!*!",V.uGlobal.uJDBom(V.Local.i)!Parent,"!*!!*!",V.uGlobal.uJDBom(V.Local.i)!Parent,"!*!!*!!*!04!*!!*!!*!!*!!*!",V.Local.sParam)
		F.Global.General.CallWrapperSync(1010,V.Local.sParam)
	F.Intrinsic.Control.Next(V.Local.i)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BomSSUPD_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.BomSSUPD.End

Program.Sub.MatlSS.Start
F.Intrinsic.Control.SetErrorHandler("MatlSS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
V.Local.iMonth.Declare(Long)
V.Local.iYear.Declare(Long)

V.uGlobal.uMatlSS.Redim(-1,-1)
V.Local.sSql.Set("select PART,AMT_ALT_COST from INVENTORY_MSTR order by PART")
F.ODBC.Connection!con.OpenRecordsetRO("rst",V.Local.sSql)
F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
	F.Intrinsic.Variable.LoadUDTFromRecordset("Con","rst","v.uGlobal.uMatlSS",False,0)
F.Intrinsic.Control.EndIf
F.ODBC.con!rst.Close
F.Intrinsic.Control.If(V.uGlobal.uMatlSS.UBound,>,-1)
	F.Intrinsic.Date.Month(V.Screen.SS_Form1!dtpDate.Value,V.Local.iMonth)
	F.Intrinsic.Date.Year(V.Screen.SS_Form1!dtpDate.Value,V.Local.iYear)
	Function.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uMatlSS!Month,V.Local.Month)
	Function.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uMatlSS!Year,V.Local.Year)
	Function.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uMatlSS!Alt_Cost,"Cost")
	Function.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uMatlSS!Month,"Month")
	Function.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uMatlSS!Year,"Year")
	V.Local.sSql.Set("Select * from ATG_Matl_Snapshot")
	F.ODBC.Connection!con.OpenRecordsetRW("rst","select * from ATG_MATL_SNAPSHOT")
		Function.Intrinsic.Variable.SaveUDTToRecordset("Con","rst","v.uGlobal.uMatlSS")
	F.ODBC.con!rst.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MatlSS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.MatlSS.End

Program.Sub.MatlSSUPD.Start
F.Intrinsic.Control.SetErrorHandler("MatlSSUPD_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sApp.Declare(String)
V.Local.sWrkBk.Declare(String)
V.Local.sWrkSht.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.sSheet.Declare(String)
V.Local.sRows.Declare(String)
V.Local.sCols.Declare(String)
V.Local.i.Declare(Long)
V.Local.sSql.Declare(String)

V.Local.sApp.Set("ExcelApp")
V.Local.sWrkBk.Set("ExcelWorkBook")
V.Local.sWrkSht.Set("ExcelWorkSheet")

F.Automation.MSExcel.CreateAppObject(V.Local.sApp)
F.Automation.MSExcel.OpenWorkbook(V.Local.sApp,V.Local.sWrkBk,V.Screen.SS_Form1!txtFile.Text)
F.Automation.MSExcel.OpenWorksheet(V.Local.sWrkBk,V.Local.sWrkSht,1)
F.Automation.MSExcel.RowCount(V.Local.sWrkSht,V.Local.iRows)
F.Automation.MSExcel.ReadSpreadsheet(V.Screen.SS_Form1!txtFile.Text,2,V.Local.iRows,V.Local.sSheet)
F.Intrinsic.String.Split(V.Local.sSheet,"$!$",V.Local.sRows)
F.Intrinsic.Control.For(V.Local.i,V.Local.sRows.LBound,V.Local.sRows.UBound,1)
	F.Intrinsic.String.Split(V.Local.sRows(V.Local.i),"*!*",V.Local.sCols)
	F.Intrinsic.Control.If(V.Local.sCols(0),<>,"")
		F.Intrinsic.String.Concat("update INVENTORY_MSTR set AMT_ALT_COST='",V.Local.sCols(1),"' where PART='",V.Local.sCols(0),"';",V.Local.sSql)
		F.ODBC.Connection!con.Execute(V.Local.sSql)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.i)
F.Automation.MSExcel.DestroyAllObjects(V.Local.sApp,V.Local.sWrkBk,V.Local.sWrkSht)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MatlSSUPD_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: ATG_BOM-Material_Snapshot.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.MatlSSUPD.End

Program.Sub.ScreenSS.Start
SS_Form1{{CAPTION::BOM Material Reprice
SS_Form1.CTRL{{NAME::dtpDate\\TYPE::6\\CAPTION::Select Month\\GROUP::-1\\BROWSER::0
SS_Form1.CTRL{{NAME::txtFile\\TYPE::2\\CAPTION::Select Import Spreadsheet\\GROUP::-1\\BROWSER::1
SS_Form1.CTRL{{NAME::cmdOk\\TYPE::5\\CAPTION::Ok\\GROUP::-1\\BROWSER::0

Program.Sub.ScreenSS.End

